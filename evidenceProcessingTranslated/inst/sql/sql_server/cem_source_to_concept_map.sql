IF OBJECT_ID('@stcmTable','U') IS NOT NULL DROP TABLE @stcmTable;
IF OBJECT_ID('tempdb..#temp_1', 'U') IS NOT NULL DROP TABLE #temp_1;
IF OBJECT_ID('tempdb..#TEMP_DUPES', 'U') IS NOT NULL DROP TABLE #TEMP_DUPES;
IF OBJECT_ID('tempdb..#TEMP_UMLS_LU', 'U') IS NOT NULL DROP TABLE #TEMP_UMLS_LU;

CREATE TABLE @stcmTable (
	source_code             varchar(255) NOT NULL,
	source_concept_id       int NOT NULL,
	source_vocabulary_id    varchar(20) NOT NULL,
	source_code_description varchar(255) NULL,
	target_concept_id       int NOT NULL,
	target_vocabulary_id    varchar(20) NULL,
	valid_start_date        date NOT NULL,
	valid_end_date          date NOT NULL,
	invalid_reason          varchar(1) NULL
);

/*Genderate Temporary UMLS Lookup*/
SELECT DISTINCT CUI, SAB AS SOURCE_CODE_TYPE, MIN(c.concept_id) AS CONCEPT_ID
INTO #TEMP_1
FROM @umlsSchema.MRCONSO m
	JOIN @vocabulary.CONCEPT c
		ON c.concept_code = m.SCUI
WHERE ((SAB = 'SNOMEDCT_US' AND LAT = 'ENG' AND TTY='PT')
OR SAB = 'RXNORM')
GROUP BY CUI, SAB;

/*To Get Rid of SNOMED CT Duplicates for RxNorm*/
SELECT CUI
INTO #TEMP_DUPES
FROM #TEMP_1
GROUP BY CUI
HAVING COUNT(*) > 1;


SELECT *
INTO #TEMP_UMLS_LU
FROM #TEMP_1
WHERE CUI IN (
	SELECT CUI FROM #TEMP_DUPES
)
AND SOURCE_CODE_TYPE = 'RxNorm'
UNION
SELECT *
FROM #TEMP_1
WHERE CUI NOT IN (
	SELECT CUI FROM #TEMP_DUPES
)
ORDER BY 1,2;

INSERT INTO @stcmTable (SOURCE_CODE, SOURCE_CONCEPT_ID, SOURCE_VOCABULARY_ID,
  SOURCE_CODE_DESCRIPTION, TARGET_CONCEPT_ID, TARGET_VOCABULARY_ID,
  VALID_START_DATE, VALID_END_DATE, INVALID_REASON)
SELECT *
FROM (

  /*AEOLUS & SPLICER*/
  /*PLACE HOLDER UNTIL WE BUILD A MAP, WE DO NOT WANT TO LEVERAGE THE VOCAB*/
  SELECT DISTINCT
    '' AS SOURCE_CODE,
    0 AS SOURCE_CONCEPT_ID,
    'MEDDRA_TO_STANDARD' AS SOURCE_VOCABULARY_ID,
    NULL AS SOURCE_CODE_DESCRIPTION,
    0 AS TARGET_CONCEPT_ID,
    NULL AS TARGET_VOCABULARY_ID,
  	CAST('1970-01-01' AS DATE) AS VALID_START_DATE,
    CAST('2099-12-31' AS DATE) AS VALID_END_DATE,
    NULL AS INVALID_REASON

  UNION ALL

  /*MEDLINE*/
  SELECT DISTINCT
    c1.CONCEPT_CODE AS SOURCE_CODE,
    c1.CONCEPT_ID AS SOURCE_CONCEPT_ID,
    'MESH_TO_STANDARD' AS SOURCE_VOCABULARY_ID,
    c1.CONCEPT_NAME AS SOURCE_CODE_DESCRIPTION,
    c2.CONCEPT_ID AS TARGET_CONCEPT_ID,
    NULL AS TARGET_VOCABULARY_ID,
  	CAST('1970-01-01' AS DATE) AS VALID_START_DATE,
    CAST('2099-12-31' AS DATE) AS VALID_END_DATE,
    NULL AS INVALID_REASON
  FROM @vocabulary.CONCEPT c1
  	JOIN @vocabulary.CONCEPT_RELATIONSHIP cr
  		ON cr.CONCEPT_ID_1 = c1.CONCEPT_ID
  		AND (
  			cr.INVALID_REASON IS NULL
  			OR cr.INVALID_REASON = ''
  		)
  	JOIN @vocabulary.CONCEPT c2
  		ON c2.CONCEPT_ID = cr.CONCEPT_ID_2
  		--AND c2.DOMAIN_ID IN ('Condition','Drug')
  		AND c2.STANDARD_CONCEPT = 'S'
  WHERE UPPER(c1.VOCABULARY_ID) = 'MESH'

  UNION ALL

  /*SemMedDB*/
  /*~~~Right now created the lookup but once we have updated copy of UMLS
  should pull directly from there~~~
  SELECT CUI AS SOURCE_CODE,
    	0 AS SOURCE_CONCEPT_ID,
    	'CUI_TO_STANDARD' AS SOURCE_VOCABULARY_ID,
    	'' AS SOURCE_CODE_DESCRIPTION,
    	CONCEPT_ID AS TARGET_CONCEPT_ID,
    	NULL AS TARGET_CONCEPT_ID,
    	CAST('1970-01-01' AS DATE) AS VALID_START_DATE,
      CAST('2099-12-31' AS DATE) AS VALID_END_DATE,
    	NULL AS INVALID_REASON
  FROM CEM_CLEAN.dbo.LU_CUI_TO_OMOP_VOCAB*/

  SELECT CUI AS SOURCE_CODE,
  	0 AS SOURCE_CONCEPT_ID,
  	'CUI_TO_STANDARD' AS SOURCE_VOCABULARY_ID,
  	'' AS SOURCE_CODE_DESCRIPTION,
  	CONCEPT_ID AS TARGET_CONCEPT_ID,
  	NULL AS TARGET_CONCEPT_ID,
  	CAST('1970-01-01' AS DATE) AS VALID_START_DATE,
    CAST('2099-12-31' AS DATE) AS VALID_END_DATE,
  	NULL AS INVALID_REASON
  FROM #TEMP_UMLS_LU

	UNION ALL

  /*SPLICER*/
  SELECT DISTINCT c.CONCEPT_CODE AS SOURCE_CODE,
  	c.CONCEPT_ID AS SOURCE_CONCEPT_ID,
  	'SPL_TO_STANDARD_DRUG' AS SOURCE_VOCABULARY_ID,
  	c.CONCEPT_NAME AS SOURCE_CODE_DESCRIPTION,
  	c2.CONCEPT_ID AS TARGET_CONCEPT_ID,
  	NULL AS TARGET_VOCABULARY_ID,
  	CAST('1970-01-01' AS DATE) AS VALID_START_DATE,
    CAST('2099-12-31' AS DATE) AS VALID_END_DATE,
  	NULL AS INVALID_REASON
  FROM @vocabulary.CONCEPT c
  	JOIN @vocabulary.CONCEPT_RELATIONSHIP cr
  		ON cr.CONCEPT_ID_2 = c.CONCEPT_ID
  	JOIN @vocabulary.CONCEPT c2
  		ON c2.CONCEPT_ID = cr.CONCEPT_ID_1
  		AND c2.STANDARD_CONCEPT = 'S'
  		AND c2.DOMAIN_ID = 'Drug'
  WHERE c.VOCABULARY_ID = 'SPL'

  UNION ALL

  /*STANARD TO MEDDRA*/
  SELECT DISTINCT
      c1.CONCEPT_CODE AS SOURCE_CODE,
      c1.CONCEPT_ID AS SOURCE_CONCEPT_ID,
      'STANDARD_TO_MEDDRA' AS SOURCE_VOCABULARY_ID,
      c1.CONCEPT_NAME AS SOURCE_CODE_DESCRIPTION,
      c2.CONCEPT_ID AS TARGET_CONCEPT_ID,
      NULL AS TARGET_VOCABULARY_ID,
    	CAST('1970-01-01' AS DATE) AS VALID_START_DATE,
      CAST('2099-12-31' AS DATE) AS VALID_END_DATE,
      NULL AS INVALID_REASON
  FROM @vocabulary.CONCEPT c1
  	JOIN @vocabulary.CONCEPT_ANCESTOR ca
  		ON ca.DESCENDANT_CONCEPT_ID = c1.CONCEPT_ID
  		AND ca.MAX_LEVELS_OF_SEPARATION = 1
  	JOIN @vocabulary.CONCEPT c2
  		ON c2.CONCEPT_ID = ca.ANCESTOR_CONCEPT_ID
  		AND c2.VOCABULARY_ID = 'MedDRA'

) z;

CREATE INDEX IDX_STCM_SOURCE_CODE ON @stcmTable (SOURCE_CODE);

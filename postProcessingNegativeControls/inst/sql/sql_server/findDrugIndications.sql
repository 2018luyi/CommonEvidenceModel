IF OBJECT_ID('@storeData', 'U') IS NOT NULL DROP TABLE @storeData;

/*INDICATIONs*/
SELECT DISTINCT
  c1.CONCEPT_ID AS DRUG_CONCEPT_ID, c1.CONCEPT_NAME AS DRUG_CONCEPT_NAME,
  c2.CONCEPT_ID AS INDICATION_CONCEPT_ID, c2.CONCEPT_NAME AS INDICATION_CONCEPT_NAME,
	c4.CONCEPT_ID, c4.CONCEPT_NAME
INTO @storeData
FROM @vocabulary.CONCEPT c1
	JOIN @vocabulary.CONCEPT_ANCESTOR ca1
		ON ca1.ANCESTOR_CONCEPT_ID = c1.CONCEPT_ID
	JOIN @vocabulary.CONCEPT_ANCESTOR ca2
		ON ca2.DESCENDANT_CONCEPT_ID = ca1.DESCENDANT_CONCEPT_ID
	JOIN @vocabulary.CONCEPT c2 /*Find Indications in Vocabulary*/
		ON c2.CONCEPT_ID = ca2.ANCESTOR_CONCEPT_ID
		AND UPPER(c2.VOCABULARY_ID) = 'INDICATION'
	JOIN @vocabulary.CONCEPT_RELATIONSHIP cr1
		ON cr1.CONCEPT_ID_1 = c2.CONCEPT_ID
	JOIN @vocabulary.CONCEPT c3 /*Map Indications to SNOMED*/
		ON c3.CONCEPT_ID = cr1.CONCEPT_ID_2
		AND UPPER(c3.DOMAIN_ID) = 'CONDITION'
		AND UPPER(c3.STANDARD_CONCEPT) = 'S'
	/*JOIN @vocabulary.CONCEPT_ANCESTOR ca3
	--But use all their children to hunt for indication - this this cast too wide of a net
		ON ca3.ANCESTOR_CONCEPT_ID = c3.CONCEPT_ID
	JOIN @vocabulary.CONCEPT c4
		ON c4.CONCEPT_ID = ca3.DESCENDANT_CONCEPT_ID*/
	JOIN @vocabulary.CONCEPT_RELATIONSHIP cr2
		ON cr2.CONCEPT_ID_1 = c3.CONCEPT_ID
	JOIN @vocabulary.CONCEPT c4
		ON c4.CONCEPT_ID = cr2.CONCEPT_ID_2
		AND UPPER(c4.DOMAIN_ID) = 'CONDITION'
		AND c4.STANDARD_CONCEPT = 'S'
WHERE {@outcomeOfInterest == 'condition'}?{c1.CONCEPT_ID}
      {@outcomeOfInterest == 'drug'}?{c4.CONCEPT_ID}
      IN ( @conceptsOfInterest )
AND UPPER(c1.DOMAIN_ID) = 'DRUG'
AND UPPER(c1.STANDARD_CONCEPT) = 'S';

CREATE INDEX IDX_AS_INDICATIONS_CONCEPT_ID ON @storeData (CONCEPT_ID);
